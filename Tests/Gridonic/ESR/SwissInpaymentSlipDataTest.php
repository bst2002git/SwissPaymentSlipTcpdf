<?php
namespace Gridonic\ESR;
require __DIR__ . '/../../../vendor/autoload.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-04 at 18:37:56.
 */
class SwissInpaymentSlipDataTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var SwissInpaymentSlipData
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new SwissInpaymentSlipData;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setType
     * @todo   Implement testSetType().
     */
    public function testSetType()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getType
     * @todo   Implement testGetType().
     */
    public function testGetType()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithBank
     */
    public function testSetWithBankNoTypeSpecified()
    {
		$this->object->setBankData('Seldwyla Bank', '8001 Zürich');

		$this->assertTrue($this->object->setWithBank());
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(true));
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(false));
		$this->assertFalse($this->object->getWithBank());
		$this->assertEquals(false, $this->object->getBankName());
		$this->assertEquals(false, $this->object->getBankCity());
    }

	/**
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithBank
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithBank
	 */
	public function testSetWithBankOrangeType()
	{
		$this->object = new SwissInpaymentSlipData('orange');
		$this->object->setBankData('Seldwyla Bank', '8001 Zürich');

		$this->assertTrue($this->object->setWithBank());
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(true));
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(false));
		$this->assertFalse($this->object->getWithBank());
		$this->assertEquals(false, $this->object->getBankName());
		$this->assertEquals(false, $this->object->getBankCity());
	}

	/**
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithBank
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithBank
	 */
	public function testSetWithBankRedType()
	{
		$this->object = new SwissInpaymentSlipData('red');
		$this->object->setBankData('Seldwyla Bank', '8001 Zürich');

		$this->assertTrue($this->object->setWithBank());
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(true));
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertTrue($this->object->setWithBank(false));
		$this->assertFalse($this->object->getWithBank());
		$this->assertEquals(false, $this->object->getBankName());
		$this->assertEquals(false, $this->object->getBankCity());
	}

	/**
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithBank
	 * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithBank
	 */
	public function testSetWithBankParameters()
	{
		$this->object->setBankData('Seldwyla Bank', '8001 Zürich');

		$this->assertFalse($this->object->setWithBank(1));
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertFalse($this->object->setWithBank(0));
		$this->assertTrue($this->object->getWithBank());
		$this->assertEquals('Seldwyla Bank', $this->object->getBankName());
		$this->assertEquals('8001 Zürich', $this->object->getBankCity());

		$this->assertFalse($this->object->setWithBank(0));
		$this->assertTrue($this->object->getWithBank());

		$this->assertFalse($this->object->setWithBank('foo'));
		$this->assertTrue($this->object->getWithBank());

		$this->assertFalse($this->object->setWithBank(123));
		$this->assertTrue($this->object->getWithBank());

		$this->assertFalse($this->object->setWithBank(123.456));
		$this->assertTrue($this->object->getWithBank());

		$this->assertFalse($this->object->setWithBank(array(true)));
		$this->assertTrue($this->object->getWithBank());
	}

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithAccountNumber
     * @todo   Implement testSetWithAccountNumber().
     */
    public function testSetWithAccountNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithAccountNumber
     * @todo   Implement testGetWithAccountNumber().
     */
    public function testGetWithAccountNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithRecipient
     * @todo   Implement testSetWithRecipient().
     */
    public function testSetWithRecipient()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithRecipient
     * @todo   Implement testGetWithRecipient().
     */
    public function testGetWithRecipient()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithAmount
     * @todo   Implement testSetWithAmount().
     */
    public function testSetWithAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithAmount
     * @todo   Implement testGetWithAmount().
     */
    public function testGetWithAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithReferenceNumber
     * @todo   Implement testSetWithReferenceNumber().
     */
    public function testSetWithReferenceNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithReferenceNumber
     * @todo   Implement testGetWithReferenceNumber().
     */
    public function testGetWithReferenceNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithBankingCustomerId
     * @todo   Implement testSetWithBankingCustomerId().
     */
    public function testSetWithBankingCustomerId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithBankingCustomerId
     * @todo   Implement testGetWithBankingCustomerId().
     */
    public function testGetWithBankingCustomerId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithPayer
     * @todo   Implement testSetWithPayer().
     */
    public function testSetWithPayer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithPayer
     * @todo   Implement testGetWithPayer().
     */
    public function testGetWithPayer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithIban
     * @todo   Implement testSetWithIban().
     */
    public function testSetWithIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithIban
     * @todo   Implement testGetWithIban().
     */
    public function testGetWithIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setWithPaymentReason
     * @todo   Implement testSetWithPaymentReason().
     */
    public function testSetWithPaymentReason()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getWithPaymentReason
     * @todo   Implement testGetWithPaymentReason().
     */
    public function testGetWithPaymentReason()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setBankData
     * @todo   Implement testSetBankData().
     */
    public function testSetBankData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getBankName
     * @todo   Implement testGetBankName().
     */
    public function testGetBankName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getBankCity
     * @todo   Implement testGetBankCity().
     */
    public function testGetBankCity()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setAccountNumber
     * @todo   Implement testSetAccountNumber().
     */
    public function testSetAccountNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getAccountNumber
     * @todo   Implement testGetAccountNumber().
     */
    public function testGetAccountNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setRecipientData
     * @todo   Implement testSetRecipientData().
     */
    public function testSetRecipientData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getRecipientLine1
     * @todo   Implement testGetRecipientLine1().
     */
    public function testGetRecipientLine1()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getRecipientLine2
     * @todo   Implement testGetRecipientLine2().
     */
    public function testGetRecipientLine2()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getRecipientLine3
     * @todo   Implement testGetRecipientLine3().
     */
    public function testGetRecipientLine3()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getRecipientLine4
     * @todo   Implement testGetRecipientLine4().
     */
    public function testGetRecipientLine4()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setAmount
     * @todo   Implement testSetAmount().
     */
    public function testSetAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getAmount
     * @todo   Implement testGetAmount().
     */
    public function testGetAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setReferenceNumber
     * @todo   Implement testSetReferenceNumber().
     */
    public function testSetReferenceNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getReferenceNumber
     * @todo   Implement testGetReferenceNumber().
     */
    public function testGetReferenceNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setBankingCustomerId
     * @todo   Implement testSetBankingCustomerId().
     */
    public function testSetBankingCustomerId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getBankingCustomerId
     * @todo   Implement testGetBankingCustomerId().
     */
    public function testGetBankingCustomerId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setPayerData
     * @todo   Implement testSetPayerData().
     */
    public function testSetPayerData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPayerLine1
     * @todo   Implement testGetPayerLine1().
     */
    public function testGetPayerLine1()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPayerLine2
     * @todo   Implement testGetPayerLine2().
     */
    public function testGetPayerLine2()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPayerLine3
     * @todo   Implement testGetPayerLine3().
     */
    public function testGetPayerLine3()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPayerLine4
     * @todo   Implement testGetPayerLine4().
     */
    public function testGetPayerLine4()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setIban
     * @todo   Implement testSetIban().
     */
    public function testSetIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getIban
     * @todo   Implement testGetIban().
     */
    public function testGetIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::setPaymentReason
     * @todo   Implement testSetPaymentReason().
     */
    public function testSetPaymentReason()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPaymentReasonLine1
     * @todo   Implement testGetPaymentReasonLine1().
     */
    public function testGetPaymentReasonLine1()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPaymentReasonLine2
     * @todo   Implement testGetPaymentReasonLine2().
     */
    public function testGetPaymentReasonLine2()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPaymentReasonLine3
     * @todo   Implement testGetPaymentReasonLine3().
     */
    public function testGetPaymentReasonLine3()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getPaymentReasonLine4
     * @todo   Implement testGetPaymentReasonLine4().
     */
    public function testGetPaymentReasonLine4()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getCompleteReferenceNumber
     * @todo   Implement testGetCompleteReferenceNumber().
     */
    public function testGetCompleteReferenceNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getFormattedIban
     * @todo   Implement testGetFormattedIban().
     */
    public function testGetFormattedIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getCodeLine
     * @todo   Implement testGetCodeLine().
     */
    public function testGetCodeLine()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getAmountFrancs
     * @todo   Implement testGetAmountFrancs().
     */
    public function testGetAmountFrancs()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Gridonic\ESR\SwissInpaymentSlipData::getAmountCents
     * @todo   Implement testGetAmountCents().
     */
    public function testGetAmountCents()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
